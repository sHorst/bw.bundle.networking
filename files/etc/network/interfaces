# generated by Bundelwrap

auto lo
iface lo inet loopback
% for interface in sorted(node.metadata['interfaces'].keys()):
<%
config = node.metadata['interfaces'][interface]
%>
% if config.get('auto', True):
auto ${interface}
% endif
% if config.get('ip_addresses', []):
iface ${interface} ${config.get('type', "inet static")}
  address ${node.metadata['interfaces'][interface]['ip_addresses'][0]}
  netmask ${node.metadata['interfaces'][interface].get('netmask', "255.255.255.0")}
    % if 'gateway' in node.metadata['interfaces'][interface]:
  gateway ${node.metadata['interfaces'][interface]['gateway']}
    % endif
  % for ip_address in node.metadata['interfaces'][interface]['ip_addresses'][1:]:
  up ip addr add ${ip_address}/${node.metadata['interfaces'][interface].get('netmask', "255.255.255.0")} dev ${interface}
  down ip addr del ${ip_address}/${node.metadata['interfaces'][interface].get('netmask', "255.255.255.0")} dev ${interface}
  % endfor
% else:
iface ${interface} ${config.get('type', "")}
% endif
% for option in config.get('options', []):
  ${option}
% endfor

  % if config.get('ipv6_addresses', []):
iface ${interface} ${config.get('ipv6_type', 'inet6 static')}
  address ${node.metadata['interfaces'][interface]['ipv6_addresses'][0]}
  netmask ${node.metadata['interfaces'][interface].get('ipv6_netmask', "64")}
      % if 'ipv6_gateway' in node.metadata['interfaces'][interface]:
  gateway ${node.metadata['interfaces'][interface]['ipv6_gateway']}
      % endif
% for ip6_option in config.get('ipv6_options', []):
  ${ip6_option}
% endfor
  % endif

% endfor
